#include "pandoramodules_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "services_dune.fcl"

process_name: myparticlereco

services:
{
  # Load the service that manages root files for histograms.
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_data
  ChannelStatusService: @local::dunefd_channel_status
  ExptGeoHelperInterface:       @local::dune_geometry_helper
  GeometryConfigurationWriter:  {}
  Geometry:                     @local::protodunehdv6_geo
  DetectorClocksService:        @local::protodunehd_detectorclocks
  DetectorPropertiesService:    @local::protodunehd_detproperties
  LArPropertiesService:         @local::dunefd_properties
  LArFFT:                       @local::dunefd_larfft
  DatabaseUtil:                 @local::dunefd_database

  IFDH: {}

  TFileService: 
  {
    fileName: "pdhd_keepup_decoder.root"
  }
  HDF5RawFile3Service:  {}

  DAPHNEChannelMapService: {
    FileName: "DAPHNE_test5_ChannelMap_v1.txt"
  }

  PD2HDChannelMapService:
  {
    FileName: "PD2HDChannelMap_WIBEth_electronics_v1.txt"
  }
}

physics:
{
  producers:
  {
    # Pandora Reconstruction
    pandora:            @local::protodunehd_pandora
    pandoraTrack:       @local::dune_pandoraTrackCreation
    pandoraShower:      @local::dune_pandoraShowerCreation

    # hit feature labeling
    emtrkmichelid:      @local::pdhd_data_emtrkmichelid  
  }

  produce: [
    pandora,
    pandoraTrack,
    pandoraShower,
    emtrkmichelid
  ]

  output: [ out1 ]
  trigger_paths : [ produce ]
  end_paths: [ output ]
}

outputs:
{
  out1:
  {
    outputCommands: [ "keep *"]
    compressionLevel: 1
    module_type: RootOutput
    fileName: "%ifb_%tc_keepup.root"
    dataTier:    "full-reconstructed"
    streamName: "out1"
  }
}

source:
{
    module_type: RootInput
      maxEvents: -1
        saveMemoryObjectThreshold: 0
}

physics.producers.pandora.HitFinderModuleLabel:             "hitpdune"
physics.producers.pandoraTrack.PFParticleLabel:             "pandora"
physics.producers.pandoraShower.PFParticleLabel:            "pandora"
